현재 클라우드 - 자원의 스펙을 늘리고 줄이는 것이 가장 장점.
이중화 고려 - LB를 애당초 처음부터 넣어주는 방법이 가장 좋고 고객에게 제안 주는게 좋음

aws 팀장님 작업에 대한 교육 시작

오토스케일링 - 설정한 조건에 맞게 미리 정한 스펙으로 스케일을 늘리고 줄이는 서비스
오토스케일링에 대해서 서비스를 사람들이 접속시에 100명이 들어온다고 치면 오토스케일링을 설정한다 하더라도 100명이 들어와도 버틸수 있도록
스펙을 가지고 있어야된다. 그렇지 않고 못버티면 오토스케일링이되어 확장되고있어도 이미 기존 서버는 뻗기 때문에 그다음 서버들도 생성되면서 죽게되서
서비스가 끊겨버리기 때문이다.

오토스케일 시에 소스 아미를 떠서 오토스케일링 컨피규레이션에 적용해야되는 번거로움이 있기에 보통은 오토스케일링을 구성하지 않음.(보통 영세기업)

삼성 플러스 베트남 이벤트 건 내용
오토스케일링 서버 한대 덜 생성해서 알람발생하여 삼성 고객이 바로 지연에 대한 문의옴.
   -> 로그등 확인이 가능하면 팩트로 이야기, 확인이 불가능하다면 덮고갈 수 있게 이야기함.(짬이 있어야 판단가능..)

체크리스트 기반 - 후속조치 - 크로스 체크 등으로 


삼성플러스 룸....
이미지 뜰 경우 No reboot 체크하고 생성하는 것이 좋음 - 서비스가 동작중에 클론으로 생성하기 위해서 필이 취해야될 행동.
자주 오토스케일링 해야될 때 미리 zabbix에서 ip 설정해두고 호스트 네임만 추가해서 모니터링 하는것이 편하고 좋은 방법-모니터링 설정시

일반적으로 elb 를 추가해서 구성한다.
그리고 타겟그룹을 통해서 맴버를 관리할 수 있다.

로드벨런서에서와 인스턴스들 관의 관계는 target group을 통해서 쉽게 확인가능

ec2 도메인서비스를 기준으로 사용하면서 도메인서버에 아이피 넣어서 여러 대의 서버를 같은 도메인에서 사용하고있는 구조로 보통 사용.

오토스케일 일 때 => 업업 아웃아웃아웃~~~~ 구조로 진행됨

Deregistration delay  = 스케일 업일 시 기존 서버에서 큰 서버로 교체하는 방식을 취하는데 기존 서버가 빠질 때 서비스 연결이 끊긴다. 그렇기 때문에
                        교체하면서 기존서버의 대기시간을 가져서 끊기는것을 방지.

**아이피 변경되는 경우
-스케일 업일 시 서버가 교체 되면서 아이피 또한 변경됨.
-부하가 생기거나 물리서버가 죽었을경우 아이피 변경됨. 0/2

 ec2를 정상인지 확인하는 경우 - OS, host에 핑을 쳣을때 0/2, 1/2 등등 핑이 연결된 것을 확인하여 둘다 죽으면 0/2값을 출력 - Status check
 - 1/2 일 경우는 무조건 OS 체크가 죽은것
 - 0/2 일 경우는 무조건 Host 머신이 죽은것

 심플한 구성 web-was-db / web-db /
 
 db primary - replica replication시에 failover (1분정도 끊김) - RDS   => 그러나 적당히 5분 잡는게 좋음
   -> 복구는 짧으나 status Available상태가 15~20 정도 걸림 => 정상으로 돌아오는 시간이 15~20이기때문에 고객께 20정도 걸린다 전달.

****performance insights****   =>   일주일은 무료이기때문에 비용이 차이가 얼마 안나면 걸고보자...(?!)
시간에 따른 사용 그래프 및 부하걸리게 된 쿼리에 대한 정보 확인가능.

****parameter group
default는 변경을 재부팅해야되는 문제때문에 custom으로 만들어두는것이 좋다.
custom에서 만들면 나중에 변경이 가능

parameters 의 apply type에 dynamic / static 두개가 있으며 config를 변경했을때 적용하는것이 바로되는가 재부팅해야 적용되는가에 대한 차이.

db의 max 커넥션 = 메모리에 따른 커넥션 수를 아마존에서는 제한을 둔다.

서비스 구축시 성능 측정 - 서버가 죽지 않을만큼의 맥스값을 잡아야됨. <max-connection> - 최대 90퍼정도로 잡는다.



