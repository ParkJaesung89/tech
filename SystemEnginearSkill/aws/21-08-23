1. mysql road data
-> road data 가 무엇인지, 왜 쓰는지, 어떨때 쓰는지 등 공부가 필요


insert 보다 빠르다.... ->road data로 사용시 사이즈가 큰 데이터일 경우 텍스트로 읽어들여서 옮길때 훨씬 빠른 속도를 보인다.

대용량 디비 테이블을 옮길때 많이 사용함.

aurora -> aws의 자체 db
RDS -> mysql 등의 기존의 db는 aurora 로 옮기기위한 용도로만 업데이트를 했고 현재 기존의 db들에대해서는 replication에 이중화 구조정도에서 머물러잇음


DB 문제가 있는 경우유
rds replication이 깨질경우
적용하는 시점의 차이가 있을 때

예) read / write 가 따로 구성 되있을 시 시간 차가 있을 경우
게시판에 글을 쓸경우 바로 적용됫으나 3초 혹은 1분이상 내 게시판 글이 안올라올 수 잇음

read/write를 분리하는 경우가 보통 성능이 좋음.

다만, 갭차이가 생기는 부분에대해서 조치해줄 수 없음. 그런 갭이 생기고 갭차이가 문제가 있는 거라면 직접 개발단계에서 바로 write에서 읽어오도록
소스를 박아야됨.

replication 은 write에서 업데이트한 거는 read에서 log를 확인해서 때려박는 구조
rds - replica로 계층적으로 적용하지만 똑같이 갭차이는 없을 수 없음

db 클러스터는 공유 볼륨을 하지 않으면 성능, 불안정성이 있어서 좋지 않음 - 운영적 측면에서 보통 클러스터에 공유볼륨을 구성



iam은 계정에 대한 접속에 대한 권한이나 역할에 대해서 설정할 수 있는 서비스 - api 억세스 키관련
아마존은 이런 억세스 키를 서버에 적어두면 취약점이 되기 때문에 iam roles를 통해 서버에서는 확인이 불가능하나 아마존 api는 알고 있음



기본적으로 아마존 api는 퍼블릭 엔드포인트 네트워크로 동작함.
근데 보통 db는 프라이빗 네트워크에 구성되 있음
- api는 그럼 어떻게 db에 접근할가?
 1) db서버에 퍼블릭 아이피를 적용해서 퍼블릭으로 통신
 2) NAT를 통해서 통신시킴
 3) 아마존은 모든 것이 도메인으로 구성해서 동작하기 때문에 도메인으로 통신시킴 - vpc 앤드포인트(도메인)를 적용해서 통신하며 사설 ip로 통신가능


aurora1  mysql-5.6 버전 
aurora2  mysql-5.7 버전




****
프라이빗 서브넷에서 퍼블릭 서브넷으로 하는 방법 - 인터넷 게이트웨이 추가
nat 서브넷 - nat 게이트웨이 추가

아마존은 이중화 스크립트를 제공함 


인터페이스 방식 -

버킷 생성 - 유니크한 이름으로 생성해야됨.

iam police 설정하여 iam 로그인은 되지만 api 로 통신하는것이 제약이 있어서 안됨.


dns 호스트 이름 활성화(vpc의 작업에서 설정가능)
dns 지원 활성화 필요
가 없으면 vpc 엔트포인트를 할 수 없음.


